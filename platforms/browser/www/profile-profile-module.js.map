{"version":3,"sources":["webpack:///./src/app/profile/profile.module.ts","webpack:///./src/app/profile/profile.page.html","webpack:///./src/app/profile/profile.page.scss","webpack:///./src/app/profile/profile.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA6C;AACE;AACN;AACM;AACF;AACA;AAW7C;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yDAAW,EAAE,CAAC,CAAC;aAC9D;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AChB9B,sIAAsI,aAAa,wFAAwF,UAAU,2J;;;;;;;;;;;ACArP,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACI;AACb;AACwB;AAOjE;IAEE,qBACU,aAA4B,EAC5B,EAAY,EACZ,MAAc;QAFd,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAU;QACZ,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAMD,8BAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC;aAC1C,IAAI,CACH,cAAI;YACF,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;YAEhC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ;gBACvB,KAAI,CAAC,SAAS;gBACd,KAAI,CAAC,WAAW,CAAC;QACrB,CAAC,EACD,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC5B,CAAC;IAGJ,CAAC;IAED,gCAAU,GAAV;QAAA,iBAoBA;QAnBA,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE;aACvB,IAAI,CAAC,aAAG;YAEL,IAAG,GAAG,CAAC,MAAM,IAAI,WAAW,EAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,EAAE,CAAC,MAAM,EAAE;qBACf,IAAI,CAAC,cAAI;oBACR,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBACpB,CAAC,EAAE,eAAK;oBACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACrB,CAAC,CAAC;gBAEF,8DAA8D;gBAC9D,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBAC3C,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACL,CAAC,EAAE,eAAK;YACP,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACJ,CAAC;IAnDW,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAgC;;SAEjC,CAAC;yCAIyB,8EAAa;YACxB,mEAAQ;YACJ,sDAAM;OALb,WAAW,CAoDvB;IAAD,kBAAC;CAAA;AApDuB","file":"profile-profile-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: ProfilePage }])\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col size=\\\"2\\\">\\n        <ion-avatar>\\n          <img src=\\\"{{userPicture}}\\\">\\n        </ion-avatar>\\n      </ion-col>\\n  \\n      <ion-col>\\n        <ion-title>{{userName}}</ion-title>\\n      </ion-col>\\n  \\n    </ion-row>\\n  </ion-grid>\\n  <button (click)=\\\"doFbLogout()\\\" >\\n    Cerrar sesi√≥n\\n  </button>\\n</ion-header>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Facebook } from '@ionic-native/facebook/ngx';\nimport { Router } from '@angular/router';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: 'profile.page.html',\n  styleUrls: ['profile.page.scss']\n})\nexport class ProfilePage {\n\n  constructor(\n    private nativeStorage: NativeStorage,\n    private fb: Facebook,\n    private router: Router)\n    {\n  }\n\n  userName: any;\n  userEmail: any;\n  userPicture: any;\n   \n  ngOnInit() {\n    this.nativeStorage.getItem('facebook_user')\n    .then(\n      data=> {\n        this.userName = data.name;\n        this.userEmail = data.email;\n        this.userPicture = data.picture;\n\n        console.log(this.userName +\n          this.userEmail +\n          this.userPicture)\n      },\n      error => console.log(error)\n    );\n    \n\n  }\n\n  doFbLogout(){\n\t\tthis.fb.getLoginStatus()\n\t\t.then(res =>{\n      \n      if(res.status == 'connected'){\n        console.log(res);\n        this.fb.logout()\n        .then(resp =>{\n          console.log(resp);\n        }, error => {\n          console.log(error);\n        })\n        \n        //user logged out so we will remove him from the NativeStorage\n        this.nativeStorage.remove('facebook_user');\n        this.router.navigate([\"/login\"]);\n      }\n\t\t}, error =>{\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n}\n"],"sourceRoot":""}